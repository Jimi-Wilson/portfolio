---
 import '../styles/global.css'
 import Header from "../components/Header.astro";
 const {title} = Astro.props;

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

        <link rel="icon" type="image/png" href="/public/favicon/favicon-96x96.png" sizes="96x96" />
        <link rel="icon" type="image/svg+xml" href="/public/favicon/favicon.svg" />
        <link rel="shortcut icon" href="/public/favicon/favicon.ico" />
        <link rel="apple-touch-icon" sizes="180x180" href="/public/favicon/apple-touch-icon.png" />
        <meta name="apple-mobile-web-app-title" content="Jimi Wilson" />
        <link rel="manifest" href="/public/favicon/site.webmanifest" />

        <script is:inline>
            const getThemePreference = () => {
                if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                    return localStorage.getItem('theme');
                }
                return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
            };
            const isDark = getThemePreference() === 'dark';
            document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

            if (typeof localStorage !== 'undefined') {
                const observer = new MutationObserver(() => {
                    const isDark = document.documentElement.classList.contains('dark');
                    localStorage.setItem('theme', isDark ? 'dark' : 'light');
                });
                observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
            }
        </script>

    </head>
    <body>
        <Header />


        <slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
